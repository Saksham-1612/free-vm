name: Expose VM Ports via ngrok and run Outline wiki

on:
  workflow_dispatch:

jobs:
  expose-ports:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq socat openssh-server python3-pip

      - name: Install k3s (lightweight Kubernetes)
        run: |
          curl -sfL https://get.k3s.io | sh -
          sudo chmod +x /usr/local/bin/kubectl

      - name: Install kubectl (ensure latest)
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          kubectl version --client

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm version

      - name: Start Outline (docker required)
        run: |
          if ! command -v docker &> /dev/null; then
            curl -fsSL https://get.docker.com | sh
            sudo usermod -aG docker $USER
            newgrp docker
          fi
          docker run -d --name outline -p 8090:3000 outline/outline

      - name: Start simple HTTP server on 8090 (fallback)
        run: |
          nohup python3 -m http.server 8090 &

      - name: Install ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install ngrok -y

      - name: Authenticate ngrok with embedded token
        run: |
          ngrok config add-authtoken 2tbyFMZTbGsnyrIiwkkFRe4daED_5qN5HnVvHt6oC4cLb44nj

      - name: Start ngrok tunnel for port 8090
        run: |
          nohup ngrok tcp 8090 --log=stdout > ngrok.log 2>&1 &

      - name: Wait for ngrok to initialize and show public URL
        run: |
          sleep 8
          curl --silent http://127.0.0.1:4040/api/tunnels | jq '.tunnels[0].public_url'

      - name: Setup SSH server (to allow ssh access)
        run: |
          sudo service ssh start
          echo "root:Docker!" | sudo chpasswd
          sudo sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
          sudo sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config
          sudo service ssh restart

      - name: Keep job alive to keep tunnel open and ssh running
        run: |
          echo "Tunnel and SSH server are running. SSH with root/Docker! on this machine."
          tail -f ngrok.log
